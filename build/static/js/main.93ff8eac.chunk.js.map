{"version":3,"sources":["components/Person.js","components/Filter.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","Filter","props","value","filter","onChange","handleFilterChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","useEffect","personService","initialPersons","window","confirm","p","setTimeout","catch","error","alert","message","className","event","target","preventDefault","copyOfNames","map","index","indexOf","find","returnedPerson","concat","toLowerCase","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93ff8eac.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, deletePerson }) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{person.name} {person.number}\r\n\t\t\t<button onClick={deletePerson}>Delete</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return(\r\n        <div>\r\n            filter shown with <input value={props.filter} onChange={props.handleFilterChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n\treturn(\r\n\t\t<form onSubmit={props.addPerson}>\r\n\t        <div>\r\n\t            name: <input value={props.newName} onChange={props.handleNameChange} />\r\n\t        </div>\r\n\t        <div>\r\n\t            number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n\t        </div>\r\n\t        <div>\r\n\t        <button type=\"submit\">add</button>\r\n\t        </div>\r\n\t    </form>\r\n\t)\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\nimport Person from './components/Person'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons] = useState([]) \r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ filter, setFilter ] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personService\r\n        .getAll()\r\n        .then(initialPersons => {\r\n            setPersons(initialPersons)\r\n        })\r\n    }, [])\r\n\r\n    const rows = () => persons.filter( \r\n        person => person.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1 \r\n    )\r\n    .map(\r\n        person => <Person key={person.name} person={person} deletePerson={() => deletePerson(person)} /> \r\n    )\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        let copyOfNames = [...persons].map( person => person.name )\r\n        let index = copyOfNames.indexOf(newName)\r\n        if(index !== -1){\r\n            var result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n            if(result) {\r\n                let person = persons.find(p=> p.name === copyOfNames[index])\r\n                personService\r\n                    .update(person.id, {...person, number:newNumber})\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\r\n                        setErrorMessage(`Updated ${newName}`)\r\n                        setTimeout(() => {\r\n                          setErrorMessage(null)\r\n                        }, 3000)\r\n                    })\r\n                    .catch(error => {\r\n                        setErrorMessage(`Information of ${newName} has already been removed from server`)\r\n                        setTimeout(() => {\r\n                          setErrorMessage(null)\r\n                        }, 3000)        \r\n                    })\r\n            }\r\n        }\r\n        else{\r\n            const personObject = { \r\n                name: newName,\r\n                number: newNumber \r\n            }\r\n            personService\r\n                .create(personObject)\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.concat(returnedPerson))\r\n                })\r\n            setErrorMessage(`Added ${newName}`)\r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, 3000)\r\n        }\r\n        setNewName('')\r\n        setNewNumber('')   \r\n    }\r\n\r\n    const deletePerson = (person) => {\r\n        var result = window.confirm(`Are you sure you want to delete ${person.name}?`)\r\n        if(result){\r\n            personService\r\n                .remove(person.id)\r\n                .then( () =>{ \r\n                    setPersons(persons.filter(p => p.id !== person.id)) \r\n                    setErrorMessage(`Deleted ${person.name}`)\r\n                    setTimeout(() => {\r\n                      setErrorMessage(null)\r\n                    }, 3000)\r\n                })\r\n                .catch(error => \r\n                    window.alert(`${person.name} was already deleted`)\r\n                )\r\n        }\r\n    }\r\n\r\n    const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n\r\n    return <div className='error'> { message } </div>\r\n  }\r\n\r\n    const handleNameChange = event => setNewName(event.target.value)\r\n\r\n    const handleNumberChange = event => setNewNumber(event.target.value)\r\n\r\n    const handleFilterChange = event => setFilter(event.target.value)\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={errorMessage} />\r\n            <Filter \r\n                filter={filter} \r\n                handleFilterChange={handleFilterChange} \r\n            />\r\n\r\n            <h2>add a new</h2>\r\n            \r\n            <PersonForm \r\n                addPerson={addPerson} \r\n                newName={newName} \r\n                newNumber={newNumber} \r\n                handleNameChange={handleNameChange} \r\n                handleNumberChange={handleNumberChange} \r\n            />\r\n\r\n            <h2>Numbers</h2>\r\n            {rows()}                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n  )"],"sourceRoot":""}